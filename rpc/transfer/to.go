// generated by Go Code Generator(https://github.com/OhYee/gcg); DO NOT EDIT

package transfer

import (
	"fmt"
	"github.com/OhYee/goutil"
	"io"
)

// ToValue from bytes to build-in type value
func ToValue(r io.Reader) (value goutil.Any, err error) {
	var t []byte
	t, err = goutil.ReadNBytes(r, 1)
	switch t[0] {

	case TypeUint8:
		value, err = toUint8(r)

	case TypeUint16:
		value, err = toUint16(r)

	case TypeUint32:
		value, err = toUint32(r)

	case TypeUint64:
		value, err = toUint64(r)

	case TypeInt8:
		value, err = toInt8(r)

	case TypeInt16:
		value, err = toInt16(r)

	case TypeInt32:
		value, err = toInt32(r)

	case TypeInt64:
		value, err = toInt64(r)

	case TypeString:
		value, err = toString(r)

	case TypeBytes:
		value, err = toBytes(r)

	case TypeObject:
		value, err = toObject(r)

	default:
		err = fmt.Errorf("Transfer Error: Can not identify type %d", t[0])
	}
	return
}
